         35172 function calls (33279 primitive calls) in 0.939 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.805    0.805 lbp.py:111(lbp1)
5667/3774    0.274    0.000    0.417    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.115    0.115    0.382    0.382 lbp.py:76(compute_feature_vectors)
        1    0.086    0.086    0.292    0.292 lbp.py:14(compute_neighbors)
        9    0.000    0.000    0.202    0.022 <__array_function__ internals>:2(where)
     1850    0.010    0.000    0.160    0.000 <__array_function__ internals>:2(norm)
     1850    0.070    0.000    0.138    0.000 linalg.py:2362(norm)
        1    0.000    0.000    0.135    0.135 lbp.py:118(lbp2)
        1    0.000    0.000    0.130    0.130 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.128    0.128 {method 'mean' of 'numpy.ndarray' objects}
        1    0.003    0.003    0.127    0.127 _methods.py:161(_mean)
        4    0.126    0.031    0.126    0.031 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.111    0.111 _kmeans.py:1893(predict)
        1    0.000    0.000    0.108    0.108 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.001    0.001    0.106    0.106 _kmeans.py:1810(<listcomp>)
       19    0.002    0.000    0.105    0.006 _kmeans.py:544(_labels_inertia)
       19    0.086    0.005    0.089    0.005 _k_means_lloyd.pyx:29(__pyx_fuse_1lloyd_iter_chunked_dense)
     1850    0.014    0.000    0.051    0.000 <__array_function__ internals>:2(bincount)
     1850    0.009    0.000    0.039    0.000 <__array_function__ internals>:2(dot)
     1850    0.030    0.000    0.030    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 0.5424
Execution time in seconds for step 2: 0.0458
Total execution time in seconds: 0.5882
