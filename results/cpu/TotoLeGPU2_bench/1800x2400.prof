         316639 function calls (299498 primitive calls) in 6.649 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.010    0.010    6.208    6.208 lbp.py:111(lbp1)
        1    1.078    1.078    3.242    3.242 lbp.py:76(compute_feature_vectors)
51262/34121    1.987    0.000    3.137    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.666    0.666    2.088    2.088 lbp.py:14(compute_neighbors)
        9    0.000    0.000    1.390    0.154 <__array_function__ internals>:2(where)
    16800    0.083    0.000    1.307    0.000 <__array_function__ internals>:2(norm)
    16800    0.556    0.000    1.117    0.000 linalg.py:2362(norm)
        1    0.001    0.001    0.868    0.868 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.825    0.825 {method 'mean' of 'numpy.ndarray' objects}
        1    0.025    0.025    0.825    0.825 _methods.py:161(_mean)
        4    0.810    0.202    0.810    0.202 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.451    0.451 lbp.py:118(lbp2)
    16800    0.119    0.000    0.409    0.000 <__array_function__ internals>:2(bincount)
    16800    0.074    0.000    0.322    0.000 <__array_function__ internals>:2(dot)
        1    0.000    0.000    0.271    0.271 _kmeans.py:1893(predict)
        1    0.000    0.000    0.259    0.259 _kmeans.py:1783(_labels_inertia_minibatch)
    16802    0.248    0.000    0.248    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.004    0.004    0.242    0.242 _kmeans.py:1810(<listcomp>)
    16800    0.242    0.000    0.242    0.000 {method 'flatten' of 'numpy.ndarray' objects}
      168    0.017    0.000    0.237    0.001 _kmeans.py:544(_labels_inertia)


Execution time in seconds for step 1: 5.3351
Execution time in seconds for step 2: 0.3713
Total execution time in seconds: 5.7064
