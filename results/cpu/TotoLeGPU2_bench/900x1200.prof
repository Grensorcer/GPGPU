         79381 function calls (75092 primitive calls) in 1.645 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    1.458    1.458 lbp.py:111(lbp1)
12832/8543    0.486    0.000    0.765    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.223    0.223    0.744    0.744 lbp.py:76(compute_feature_vectors)
        1    0.165    0.165    0.513    0.513 lbp.py:14(compute_neighbors)
        9    0.000    0.000    0.343    0.038 <__array_function__ internals>:2(where)
     4200    0.020    0.000    0.318    0.000 <__array_function__ internals>:2(norm)
     4200    0.136    0.000    0.271    0.000 linalg.py:2362(norm)
        1    0.000    0.000    0.201    0.201 lbp.py:10(rgb2gray)
        4    0.198    0.049    0.198    0.049 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.195    0.195 {method 'mean' of 'numpy.ndarray' objects}
        1    0.007    0.007    0.195    0.195 _methods.py:161(_mean)
        1    0.000    0.000    0.189    0.189 lbp.py:118(lbp2)
        1    0.000    0.000    0.157    0.157 _kmeans.py:1893(predict)
        1    0.000    0.000    0.146    0.146 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.002    0.002    0.137    0.137 _kmeans.py:1810(<listcomp>)
       42    0.006    0.000    0.135    0.003 _kmeans.py:544(_labels_inertia)
     4200    0.028    0.000    0.097    0.000 <__array_function__ internals>:2(bincount)
       42    0.089    0.002    0.096    0.002 _k_means_lloyd.pyx:29(__pyx_fuse_1lloyd_iter_chunked_dense)
     4200    0.018    0.000    0.077    0.000 <__array_function__ internals>:2(dot)
     4200    0.055    0.000    0.055    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 1.2895
Execution time in seconds for step 2: 0.0781
Total execution time in seconds: 1.3677
