         880639 function calls (832948 primitive calls) in 18.457 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.017    0.017   17.089   17.089 lbp.py:111(lbp1)
        1    2.943    2.943    8.994    8.994 lbp.py:76(compute_feature_vectors)
142612/94921    5.135    0.000    8.229    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    2.275    2.275    5.838    5.838 lbp.py:14(compute_neighbors)
    46750    0.236    0.000    3.665    0.000 <__array_function__ internals>:2(norm)
        9    0.000    0.000    3.479    0.387 <__array_function__ internals>:2(where)
    46750    1.552    0.000    3.129    0.000 linalg.py:2362(norm)
        1    0.001    0.001    2.239    2.239 lbp.py:10(rgb2gray)
        1    0.000    0.000    2.118    2.118 {method 'mean' of 'numpy.ndarray' objects}
        1    0.070    0.070    2.118    2.118 _methods.py:161(_mean)
        4    2.080    0.520    2.080    0.520 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    1.398    1.398 lbp.py:118(lbp2)
    46750    0.325    0.000    1.153    0.000 <__array_function__ internals>:2(bincount)
        1    0.001    0.001    1.037    1.037 _kmeans.py:1893(predict)
        1    0.000    0.000    1.004    1.004 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.011    0.011    0.957    0.957 _kmeans.py:1810(<listcomp>)
      468    0.052    0.000    0.942    0.002 _kmeans.py:544(_labels_inertia)
    46750    0.231    0.000    0.912    0.000 <__array_function__ internals>:2(dot)
    46752    0.696    0.000    0.696    0.000 {method 'astype' of 'numpy.ndarray' objects}
    46750    0.657    0.000    0.657    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 14.7864
Execution time in seconds for step 2: 1.0759
Total execution time in seconds: 15.8623
