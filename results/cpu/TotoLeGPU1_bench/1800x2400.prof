         316639 function calls (299498 primitive calls) in 6.629 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.010    0.010    6.042    6.042 lbp.py:111(lbp1)
        1    1.049    1.049    3.165    3.165 lbp.py:76(compute_feature_vectors)
51262/34121    1.917    0.000    3.105    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.659    0.659    2.024    2.024 lbp.py:14(compute_neighbors)
        9    0.000    0.000    1.332    0.148 <__array_function__ internals>:2(where)
    16800    0.084    0.000    1.279    0.000 <__array_function__ internals>:2(norm)
    16800    0.541    0.000    1.090    0.000 linalg.py:2362(norm)
        1    0.001    0.001    0.843    0.843 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.797    0.797 {method 'mean' of 'numpy.ndarray' objects}
        1    0.026    0.026    0.797    0.797 _methods.py:161(_mean)
        4    0.782    0.195    0.782    0.195 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.597    0.597 lbp.py:118(lbp2)
        1    0.000    0.000    0.415    0.415 _kmeans.py:1893(predict)
        1    0.000    0.000    0.403    0.403 _kmeans.py:1783(_labels_inertia_minibatch)
    16800    0.113    0.000    0.397    0.000 <__array_function__ internals>:2(bincount)
        1    0.004    0.004    0.386    0.386 _kmeans.py:1810(<listcomp>)
      168    0.020    0.000    0.381    0.002 _kmeans.py:544(_labels_inertia)
    16800    0.074    0.000    0.317    0.000 <__array_function__ internals>:2(dot)
    16802    0.250    0.000    0.250    0.000 {method 'astype' of 'numpy.ndarray' objects}
    16800    0.235    0.000    0.235    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 5.3096
Execution time in seconds for step 2: 0.3341
Total execution time in seconds: 5.6437
