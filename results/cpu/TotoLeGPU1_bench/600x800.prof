         35172 function calls (33279 primitive calls) in 0.771 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.712    0.712 lbp.py:111(lbp1)
5667/3774    0.248    0.000    0.365    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.095    0.095    0.322    0.322 lbp.py:76(compute_feature_vectors)
        1    0.081    0.081    0.270    0.270 lbp.py:14(compute_neighbors)
        9    0.000    0.000    0.185    0.021 <__array_function__ internals>:2(where)
     1850    0.009    0.000    0.138    0.000 <__array_function__ internals>:2(norm)
        1    0.000    0.000    0.121    0.121 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.118    0.118 {method 'mean' of 'numpy.ndarray' objects}
        1    0.003    0.003    0.118    0.118 _methods.py:161(_mean)
     1850    0.058    0.000    0.117    0.000 linalg.py:2362(norm)
        4    0.116    0.029    0.116    0.029 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.060    0.060 lbp.py:118(lbp2)
        1    0.000    0.000    0.045    0.045 _kmeans.py:1893(predict)
        1    0.000    0.000    0.043    0.043 _kmeans.py:1783(_labels_inertia_minibatch)
     1850    0.012    0.000    0.042    0.000 <__array_function__ internals>:2(bincount)
        1    0.000    0.000    0.040    0.040 _kmeans.py:1810(<listcomp>)
       19    0.002    0.000    0.039    0.002 _kmeans.py:544(_labels_inertia)
     1850    0.008    0.000    0.034    0.000 <__array_function__ internals>:2(dot)
     1850    0.025    0.000    0.025    0.000 {method 'flatten' of 'numpy.ndarray' objects}
       19    0.020    0.001    0.024    0.001 _k_means_lloyd.pyx:29(__pyx_fuse_1lloyd_iter_chunked_dense)


Execution time in seconds for step 1: 0.6217
Execution time in seconds for step 2: 0.0386
Total execution time in seconds: 0.6603
