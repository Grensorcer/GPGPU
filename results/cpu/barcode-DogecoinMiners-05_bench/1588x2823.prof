         328452 function calls (310673 primitive calls) in 7.142 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.010    0.010    6.621    6.621 lbp.py:111(lbp1)
        1    1.164    1.164    3.524    3.524 lbp.py:76(compute_feature_vectors)
53169/35390    2.133    0.000    3.371    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.689    0.689    2.201    2.201 lbp.py:14(compute_neighbors)
        9    0.000    0.000    1.476    0.164 <__array_function__ internals>:2(where)
    17424    0.089    0.000    1.431    0.000 <__array_function__ internals>:2(norm)
    17424    0.606    0.000    1.226    0.000 linalg.py:2362(norm)
        1    0.001    0.001    0.887    0.887 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.842    0.842 {method 'mean' of 'numpy.ndarray' objects}
        1    0.027    0.027    0.842    0.842 _methods.py:161(_mean)
        4    0.827    0.207    0.827    0.207 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.531    0.531 lbp.py:118(lbp2)
    17424    0.129    0.000    0.444    0.000 <__array_function__ internals>:2(bincount)
    17424    0.085    0.000    0.363    0.000 <__array_function__ internals>:2(dot)
        1    0.000    0.000    0.352    0.352 _kmeans.py:1893(predict)
        1    0.000    0.000    0.338    0.338 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.004    0.004    0.321    0.321 _kmeans.py:1810(<listcomp>)
      175    0.019    0.000    0.315    0.002 _kmeans.py:544(_labels_inertia)
    17426    0.267    0.000    0.267    0.000 {method 'astype' of 'numpy.ndarray' objects}
    17424    0.261    0.000    0.261    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 5.6483
Execution time in seconds for step 2: 0.3578
Total execution time in seconds: 6.0061
