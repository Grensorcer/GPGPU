         437810 function calls (414107 primitive calls) in 1.432 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.003    0.003    1.338    1.338 lbp.py:111(lbp1)
70883/47180    0.407    0.000    0.618    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.196    0.196    0.597    0.597 lbp.py:76(compute_feature_vectors)
        1    0.259    0.259    0.570    0.570 lbp.py:14(compute_neighbors)
        9    0.000    0.000    0.299    0.033 <__array_function__ internals>:2(where)
    23232    0.015    0.000    0.241    0.000 <__array_function__ internals>:2(norm)
    23232    0.103    0.000    0.205    0.000 linalg.py:2362(norm)
        1    0.000    0.000    0.168    0.168 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.153    0.153 {method 'mean' of 'numpy.ndarray' objects}
        1    0.007    0.007    0.153    0.153 _methods.py:161(_mean)
        4    0.150    0.037    0.150    0.037 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.096    0.096 lbp.py:118(lbp2)
    23232    0.023    0.000    0.078    0.000 <__array_function__ internals>:2(bincount)
        1    0.000    0.000    0.075    0.075 _kmeans.py:1893(predict)
        1    0.000    0.000    0.071    0.071 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.001    0.001    0.067    0.067 _kmeans.py:1810(<listcomp>)
      233    0.003    0.000    0.066    0.000 _kmeans.py:544(_labels_inertia)
    23232    0.014    0.000    0.057    0.000 <__array_function__ internals>:2(dot)
    23234    0.050    0.000    0.050    0.000 {method 'astype' of 'numpy.ndarray' objects}
    23232    0.046    0.000    0.046    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 1.1134
Execution time in seconds for step 2: 0.0820
Total execution time in seconds: 1.1954
