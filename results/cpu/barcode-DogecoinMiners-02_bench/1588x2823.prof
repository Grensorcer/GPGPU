         328452 function calls (310673 primitive calls) in 6.840 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.010    0.010    6.381    6.381 lbp.py:111(lbp1)
        1    1.085    1.085    3.300    3.300 lbp.py:76(compute_feature_vectors)
53169/35390    2.072    0.000    3.227    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.681    0.681    2.180    2.180 lbp.py:14(compute_neighbors)
        9    0.000    0.000    1.462    0.162 <__array_function__ internals>:2(where)
    17424    0.087    0.000    1.346    0.000 <__array_function__ internals>:2(norm)
    17424    0.575    0.000    1.149    0.000 linalg.py:2362(norm)
        1    0.001    0.001    0.892    0.892 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.840    0.840 {method 'mean' of 'numpy.ndarray' objects}
        1    0.027    0.027    0.840    0.840 _methods.py:161(_mean)
        4    0.826    0.207    0.826    0.207 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.468    0.468 lbp.py:118(lbp2)
    17424    0.118    0.000    0.413    0.000 <__array_function__ internals>:2(bincount)
    17424    0.075    0.000    0.329    0.000 <__array_function__ internals>:2(dot)
        1    0.000    0.000    0.320    0.320 _kmeans.py:1893(predict)
        1    0.000    0.000    0.306    0.306 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.004    0.004    0.288    0.288 _kmeans.py:1810(<listcomp>)
      175    0.019    0.000    0.282    0.002 _kmeans.py:544(_labels_inertia)
    17426    0.264    0.000    0.264    0.000 {method 'astype' of 'numpy.ndarray' objects}
    17424    0.242    0.000    0.242    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 5.3157
Execution time in seconds for step 2: 0.3483
Total execution time in seconds: 5.6640
