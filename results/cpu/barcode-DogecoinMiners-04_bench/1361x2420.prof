         242032 function calls (228934 primitive calls) in 4.910 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    4.572    4.572 lbp.py:111(lbp1)
39172/26074    1.501    0.000    2.367    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.710    0.710    2.365    2.365 lbp.py:76(compute_feature_vectors)
        1    0.475    0.475    1.552    1.552 lbp.py:14(compute_neighbors)
        9    0.000    0.000    1.050    0.117 <__array_function__ internals>:2(where)
    12835    0.066    0.000    1.006    0.000 <__array_function__ internals>:2(norm)
    12835    0.425    0.000    0.855    0.000 linalg.py:2362(norm)
        1    0.000    0.000    0.655    0.655 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.620    0.620 {method 'mean' of 'numpy.ndarray' objects}
        1    0.020    0.020    0.620    0.620 _methods.py:161(_mean)
        4    0.608    0.152    0.608    0.152 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.346    0.346 lbp.py:118(lbp2)
    12835    0.093    0.000    0.310    0.000 <__array_function__ internals>:2(bincount)
        1    0.000    0.000    0.259    0.259 _kmeans.py:1893(predict)
        1    0.000    0.000    0.250    0.250 _kmeans.py:1783(_labels_inertia_minibatch)
    12835    0.060    0.000    0.244    0.000 <__array_function__ internals>:2(dot)
        1    0.003    0.003    0.210    0.210 _kmeans.py:1810(<listcomp>)
      129    0.015    0.000    0.206    0.002 _kmeans.py:544(_labels_inertia)
    12837    0.193    0.000    0.193    0.000 {method 'astype' of 'numpy.ndarray' objects}
    12835    0.174    0.000    0.174    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 3.8729
Execution time in seconds for step 2: 0.3082
Total execution time in seconds: 4.1811
