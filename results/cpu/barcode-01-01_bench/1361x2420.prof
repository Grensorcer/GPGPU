         242032 function calls (228934 primitive calls) in 5.023 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    4.724    4.724 lbp.py:111(lbp1)
39172/26074    1.593    0.000    2.450    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.706    0.706    2.374    2.374 lbp.py:76(compute_feature_vectors)
        1    0.504    0.504    1.671    1.671 lbp.py:14(compute_neighbors)
        9    0.000    0.000    1.140    0.127 <__array_function__ internals>:2(where)
    12835    0.065    0.000    1.019    0.000 <__array_function__ internals>:2(norm)
    12835    0.441    0.000    0.871    0.000 linalg.py:2362(norm)
        1    0.000    0.000    0.679    0.679 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.617    0.617 {method 'mean' of 'numpy.ndarray' objects}
        1    0.019    0.019    0.616    0.616 _methods.py:161(_mean)
        4    0.605    0.151    0.605    0.151 {method 'reduce' of 'numpy.ufunc' objects}
    12835    0.092    0.000    0.311    0.000 <__array_function__ internals>:2(bincount)
        1    0.000    0.000    0.306    0.306 lbp.py:118(lbp2)
    12835    0.058    0.000    0.244    0.000 <__array_function__ internals>:2(dot)
    12837    0.217    0.000    0.217    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.214    0.214 _kmeans.py:1893(predict)
        1    0.000    0.000    0.205    0.205 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.003    0.003    0.191    0.191 _kmeans.py:1810(<listcomp>)
      129    0.014    0.000    0.187    0.001 _kmeans.py:544(_labels_inertia)
    12835    0.174    0.000    0.174    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 3.9773
Execution time in seconds for step 2: 0.2670
Total execution time in seconds: 4.2444
