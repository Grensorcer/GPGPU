         35172 function calls (33279 primitive calls) in 0.761 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.685    0.685 lbp.py:111(lbp1)
5667/3774    0.247    0.000    0.368    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.101    0.101    0.330    0.330 lbp.py:76(compute_feature_vectors)
        1    0.081    0.081    0.267    0.267 lbp.py:14(compute_neighbors)
        9    0.000    0.000    0.184    0.020 <__array_function__ internals>:2(where)
     1850    0.009    0.000    0.138    0.000 <__array_function__ internals>:2(norm)
     1850    0.058    0.000    0.118    0.000 linalg.py:2362(norm)
        1    0.000    0.000    0.088    0.088 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.085    0.085 {method 'mean' of 'numpy.ndarray' objects}
        1    0.003    0.003    0.085    0.085 _methods.py:161(_mean)
        4    0.083    0.021    0.083    0.021 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.077    0.077 lbp.py:118(lbp2)
        1    0.000    0.000    0.065    0.065 _kmeans.py:1893(predict)
        1    0.000    0.000    0.063    0.063 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.001    0.001    0.054    0.054 _kmeans.py:1810(<listcomp>)
       19    0.002    0.000    0.053    0.003 _kmeans.py:544(_labels_inertia)
     1850    0.012    0.000    0.044    0.000 <__array_function__ internals>:2(bincount)
       19    0.035    0.002    0.038    0.002 _k_means_lloyd.pyx:29(__pyx_fuse_1lloyd_iter_chunked_dense)
     1850    0.009    0.000    0.035    0.000 <__array_function__ internals>:2(dot)
     1850    0.025    0.000    0.025    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 0.5479
Execution time in seconds for step 2: 0.0653
Total execution time in seconds: 0.6132
