         321622 function calls (304212 primitive calls) in 6.684 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.009    0.009    6.157    6.157 lbp.py:111(lbp1)
        1    1.082    1.082    3.229    3.229 lbp.py:76(compute_feature_vectors)
52066/34656    1.951    0.000    3.061    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.679    0.679    2.073    2.073 lbp.py:14(compute_neighbors)
        9    0.000    0.000    1.359    0.151 <__array_function__ internals>:2(where)
    17063    0.085    0.000    1.300    0.000 <__array_function__ internals>:2(norm)
    17063    0.551    0.000    1.107    0.000 linalg.py:2362(norm)
        1    0.001    0.001    0.846    0.846 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.800    0.800 {method 'mean' of 'numpy.ndarray' objects}
        1    0.025    0.025    0.800    0.800 _methods.py:161(_mean)
        4    0.797    0.199    0.797    0.199 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.536    0.536 lbp.py:118(lbp2)
        1    0.000    0.000    0.413    0.413 _kmeans.py:1893(predict)
    17063    0.119    0.000    0.405    0.000 <__array_function__ internals>:2(bincount)
        1    0.000    0.000    0.390    0.390 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.004    0.004    0.364    0.364 _kmeans.py:1810(<listcomp>)
      171    0.018    0.000    0.359    0.002 _kmeans.py:544(_labels_inertia)
    17063    0.074    0.000    0.320    0.000 <__array_function__ internals>:2(dot)
    17065    0.249    0.000    0.249    0.000 {method 'astype' of 'numpy.ndarray' objects}
    17063    0.237    0.000    0.237    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 5.3345
Execution time in seconds for step 2: 0.3449
Total execution time in seconds: 5.6795
