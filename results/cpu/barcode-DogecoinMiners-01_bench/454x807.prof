         26657 function calls (25224 primitive calls) in 0.700 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.666    0.666 lbp.py:111(lbp1)
        1    0.159    0.159    0.314    0.314 lbp.py:14(compute_neighbors)
4292/2859    0.200    0.000    0.287    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.073    0.073    0.246    0.246 lbp.py:76(compute_feature_vectors)
        9    0.000    0.000    0.152    0.017 <__array_function__ internals>:2(where)
        1    0.000    0.000    0.105    0.105 lbp.py:10(rgb2gray)
     1400    0.007    0.000    0.105    0.000 <__array_function__ internals>:2(norm)
        1    0.000    0.000    0.103    0.103 {method 'mean' of 'numpy.ndarray' objects}
        1    0.002    0.002    0.103    0.103 _methods.py:161(_mean)
        4    0.102    0.025    0.102    0.025 {method 'reduce' of 'numpy.ufunc' objects}
     1400    0.044    0.000    0.089    0.000 linalg.py:2362(norm)
        1    0.000    0.000    0.034    0.034 lbp.py:118(lbp2)
     1400    0.009    0.000    0.032    0.000 <__array_function__ internals>:2(bincount)
     1400    0.006    0.000    0.026    0.000 <__array_function__ internals>:2(dot)
        1    0.000    0.000    0.025    0.025 _kmeans.py:1893(predict)
        1    0.000    0.000    0.023    0.023 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.000    0.000    0.021    0.021 _kmeans.py:1810(<listcomp>)
       14    0.002    0.000    0.021    0.001 _kmeans.py:544(_labels_inertia)
     1400    0.019    0.000    0.019    0.000 {method 'flatten' of 'numpy.ndarray' objects}
     1402    0.018    0.000    0.018    0.000 {method 'astype' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 0.4263
Execution time in seconds for step 2: 0.0801
Total execution time in seconds: 0.5065
