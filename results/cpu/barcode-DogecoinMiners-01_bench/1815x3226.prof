         428053 function calls (404879 primitive calls) in 8.963 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.011    0.011    8.282    8.282 lbp.py:111(lbp1)
        1    1.417    1.417    4.348    4.348 lbp.py:76(compute_feature_vectors)
69301/46127    2.661    0.000    4.159    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.911    0.911    2.808    2.808 lbp.py:14(compute_neighbors)
        9    0.000    0.000    1.854    0.206 <__array_function__ internals>:2(where)
    22713    0.113    0.000    1.762    0.000 <__array_function__ internals>:2(norm)
    22713    0.750    0.000    1.505    0.000 linalg.py:2362(norm)
        1    0.001    0.001    1.115    1.115 lbp.py:10(rgb2gray)
        1    0.000    0.000    1.055    1.055 {method 'mean' of 'numpy.ndarray' objects}
        1    0.034    0.034    1.055    1.055 _methods.py:161(_mean)
        4    1.036    0.259    1.036    0.259 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.693    0.693 lbp.py:118(lbp2)
    22713    0.166    0.000    0.561    0.000 <__array_function__ internals>:2(bincount)
        1    0.000    0.000    0.505    0.505 _kmeans.py:1893(predict)
        1    0.000    0.000    0.489    0.489 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.006    0.006    0.466    0.466 _kmeans.py:1810(<listcomp>)
      228    0.023    0.000    0.459    0.002 _kmeans.py:544(_labels_inertia)
    22713    0.101    0.000    0.433    0.000 <__array_function__ internals>:2(dot)
    22715    0.345    0.000    0.345    0.000 {method 'astype' of 'numpy.ndarray' objects}
    22713    0.323    0.000    0.323    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 7.1639
Execution time in seconds for step 2: 0.4791
Total execution time in seconds: 7.6430
