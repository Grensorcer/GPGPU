         328452 function calls (310673 primitive calls) in 6.908 seconds

   Ordered by: cumulative time
   List reduced from 171 to 20 due to restriction <20>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.011    0.011    6.392    6.392 lbp.py:111(lbp1)
        1    1.104    1.104    3.352    3.352 lbp.py:76(compute_feature_vectors)
53169/35390    2.046    0.000    3.192    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        1    0.685    0.685    2.150    2.150 lbp.py:14(compute_neighbors)
        9    0.000    0.000    1.429    0.159 <__array_function__ internals>:2(where)
    17424    0.086    0.000    1.363    0.000 <__array_function__ internals>:2(norm)
    17424    0.582    0.000    1.166    0.000 linalg.py:2362(norm)
        1    0.001    0.001    0.880    0.880 lbp.py:10(rgb2gray)
        1    0.000    0.000    0.835    0.835 {method 'mean' of 'numpy.ndarray' objects}
        1    0.027    0.027    0.835    0.835 _methods.py:161(_mean)
        4    0.821    0.205    0.821    0.205 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.527    0.527 lbp.py:118(lbp2)
    17424    0.119    0.000    0.418    0.000 <__array_function__ internals>:2(bincount)
        1    0.000    0.000    0.402    0.402 _kmeans.py:1893(predict)
        1    0.000    0.000    0.388    0.388 _kmeans.py:1783(_labels_inertia_minibatch)
        1    0.004    0.004    0.369    0.369 _kmeans.py:1810(<listcomp>)
      175    0.020    0.000    0.364    0.002 _kmeans.py:544(_labels_inertia)
    17424    0.077    0.000    0.334    0.000 <__array_function__ internals>:2(dot)
    17426    0.259    0.000    0.259    0.000 {method 'astype' of 'numpy.ndarray' objects}
    17424    0.251    0.000    0.251    0.000 {method 'flatten' of 'numpy.ndarray' objects}


Execution time in seconds for step 1: 5.5994
Execution time in seconds for step 2: 0.3627
Total execution time in seconds: 5.9621
